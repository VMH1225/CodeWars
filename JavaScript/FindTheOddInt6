function findOdd(A){
    A = A.sort((a,b)=>{
            return a - b
    })
    console.log('sorted')
    console.log(A)
    let num 
    let count
    for(let i = 0; i < A.length; i++){

        console.log(`checking ${A[i]}`)
        num = A[i]
        count = 1
        for(let x = i + 1; x < A.length; x++){
            if(num == A[x]){
                count++
            }
            else{
                i = x - 1
                break
            }
        }
        console.log(`current num is ${num} with a count of ${count} i equals ${i}`)
        if(count % 2 != 0){
            return num
        }
    }
}

let arr = [1,2,2,3,3,3,4,3,3,3,2,2,1] 
console.log(findOdd(arr))

/*PREP
Parameters: 'A' = an array of integers
Return: The integer in the array tha appears an odd number of times in the array. 
        only one integer will appear an odd number of times.
Examples: ([1,2,2,3,3,3,4,3,3,3,2,2,1]) => 4, ([0,1,0,1,0]) => 0, ([0]) => 0
Pseudocode: sort the 'A' array
            declare 'num', avariable to hold the current number whose occurences will be counted in the array
            declare 'count', a variable to keep the count of the number occurences of 'num' 
            create for loop set 'i' counter to 0 and the end of loop condition to i < length of 'A' 
            set 'num' to A[i] 
            set 'count' to 1 
            create inner for loop set 'x' counter to (i + 1) because we want to compare 'num' which equals to A[i] to 
            the next values in the array.
            check if 'num' equals 'A[x]'
            if they are equal add one to count and check the next value
            if they are not equal set i to equal (x - 1). to set 'num' to a new number in the outer loop
            final step of the inner loop is to check if count is odd
            if it is odd return 'num'
*/